<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.dao.ModelsMapper" >
  <resultMap id="BaseResultMap" type="org.entity.dto.Models" >
    <id column="models_id" property="modelsId" jdbcType="BIGINT" />
    <result column="models_code" property="modelsCode" jdbcType="VARCHAR" />
    <result column="models_name" property="modelsName" jdbcType="VARCHAR" />
    <result column="models_deposit" property="modelsDeposit" jdbcType="DECIMAL" />
    <result column="models_content" property="modelsContent" jdbcType="VARCHAR" />
    <result column="models_state" property="modelsState" jdbcType="INTEGER" />
    <result column="models_channel_id" property="modelsChannelId" jdbcType="BIGINT" />
    <result column="models_rent_limit" property="modelsRentLimit" jdbcType="INTEGER" />
    <result column="models_isfixed_point" property="modelsIsfixedPoint" jdbcType="INTEGER" />
    <result column="models_fixed_return" property="modelsFixedReturn" jdbcType="VARCHAR" />
    <result column="models_free_time" property="modelsFreeTime" jdbcType="INTEGER" />
    <result column="models_inPrice_id" property="modelsInpriceId" jdbcType="BIGINT" />
    <result column="models_rent_type" property="modelsRentType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap type="org.entity.dto.Models" id="BaseUnionResultMap" extends="BaseResultMap">
     <association property="channel" javaType="org.entity.dto.Channel">
        <id column="channel_id" property="channelId" jdbcType="BIGINT" />
	    <result column="channel_admin_id" property="channelAdminId" jdbcType="BIGINT" />
	    <result column="channel_name" property="channelName" jdbcType="VARCHAR" />
	    <result column="channel_charger_name" property="channelChargerName" jdbcType="VARCHAR" />
	    <result column="channel_charger_tel" property="channelChargerTel" jdbcType="VARCHAR" />
	    <result column="channel_charger_adminId" property="channelChargerAdminid" jdbcType="BIGINT" />
	    <result column="channel_state" property="channelState" jdbcType="INTEGER" />
      </association> 
  </resultMap>
  <resultMap id="IdResultMap" type="java.lang.Long" >
    <id column="models_id" property="modelsId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    models_id, models_code, models_name, models_deposit, models_content, models_state, 
    models_channel_id, models_rent_limit, models_isfixed_point, models_fixed_return, 
    models_free_time, models_inPrice_id, models_rent_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.entity.dto.ModelsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from models
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from models
    where models_id = #{modelsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from models
    where models_id = #{modelsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.entity.dto.ModelsExample" >
    delete from models
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.entity.dto.Models" >
    insert into models (models_id, models_code, models_name, 
      models_deposit, models_content, models_state, 
      models_channel_id, models_rent_limit, models_isfixed_point, 
      models_fixed_return, models_free_time, models_inPrice_id, 
      models_rent_type)
    values (#{modelsId,jdbcType=BIGINT}, #{modelsCode,jdbcType=VARCHAR}, #{modelsName,jdbcType=VARCHAR}, 
      #{modelsDeposit,jdbcType=DECIMAL}, #{modelsContent,jdbcType=VARCHAR}, #{modelsState,jdbcType=INTEGER}, 
      #{modelsChannelId,jdbcType=BIGINT}, #{modelsRentLimit,jdbcType=INTEGER}, #{modelsIsfixedPoint,jdbcType=INTEGER}, 
      #{modelsFixedReturn,jdbcType=VARCHAR}, #{modelsFreeTime,jdbcType=INTEGER}, #{modelsInpriceId,jdbcType=BIGINT}, 
      #{modelsRentType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="modelsId" parameterType="org.entity.dto.Models" >
    insert into models
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="modelsId != null" >
        models_id,
      </if>
      <if test="modelsCode != null" >
        models_code,
      </if>
      <if test="modelsName != null" >
        models_name,
      </if>
      <if test="modelsDeposit != null" >
        models_deposit,
      </if>
      <if test="modelsContent != null" >
        models_content,
      </if>
      <if test="modelsState != null" >
        models_state,
      </if>
      <if test="modelsChannelId != null" >
        models_channel_id,
      </if>
      <if test="modelsRentLimit != null" >
        models_rent_limit,
      </if>
      <if test="modelsIsfixedPoint != null" >
        models_isfixed_point,
      </if>
      <if test="modelsFixedReturn != null" >
        models_fixed_return,
      </if>
      <if test="modelsFreeTime != null" >
        models_free_time,
      </if>
      <if test="modelsInpriceId != null" >
        models_inPrice_id,
      </if>
      <if test="modelsRentType != null" >
        models_rent_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="modelsId != null" >
        #{modelsId,jdbcType=BIGINT},
      </if>
      <if test="modelsCode != null" >
        #{modelsCode,jdbcType=VARCHAR},
      </if>
      <if test="modelsName != null" >
        #{modelsName,jdbcType=VARCHAR},
      </if>
      <if test="modelsDeposit != null" >
        #{modelsDeposit,jdbcType=DECIMAL},
      </if>
      <if test="modelsContent != null" >
        #{modelsContent,jdbcType=VARCHAR},
      </if>
      <if test="modelsState != null" >
        #{modelsState,jdbcType=INTEGER},
      </if>
      <if test="modelsChannelId != null" >
        #{modelsChannelId,jdbcType=BIGINT},
      </if>
      <if test="modelsRentLimit != null" >
        #{modelsRentLimit,jdbcType=INTEGER},
      </if>
      <if test="modelsIsfixedPoint != null" >
        #{modelsIsfixedPoint,jdbcType=INTEGER},
      </if>
      <if test="modelsFixedReturn != null" >
        #{modelsFixedReturn,jdbcType=VARCHAR},
      </if>
      <if test="modelsFreeTime != null" >
        #{modelsFreeTime,jdbcType=INTEGER},
      </if>
      <if test="modelsInpriceId != null" >
        #{modelsInpriceId,jdbcType=BIGINT},
      </if>
      <if test="modelsRentType != null" >
        #{modelsRentType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.entity.dto.ModelsExample" resultType="java.lang.Integer" >
    select count(*) from models
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update models
    <set >
      <if test="record.modelsId != null" >
        models_id = #{record.modelsId,jdbcType=BIGINT},
      </if>
      <if test="record.modelsCode != null" >
        models_code = #{record.modelsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.modelsName != null" >
        models_name = #{record.modelsName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelsDeposit != null" >
        models_deposit = #{record.modelsDeposit,jdbcType=DECIMAL},
      </if>
      <if test="record.modelsContent != null" >
        models_content = #{record.modelsContent,jdbcType=VARCHAR},
      </if>
      <if test="record.modelsState != null" >
        models_state = #{record.modelsState,jdbcType=INTEGER},
      </if>
      <if test="record.modelsChannelId != null" >
        models_channel_id = #{record.modelsChannelId,jdbcType=BIGINT},
      </if>
      <if test="record.modelsRentLimit != null" >
        models_rent_limit = #{record.modelsRentLimit,jdbcType=INTEGER},
      </if>
      <if test="record.modelsIsfixedPoint != null" >
        models_isfixed_point = #{record.modelsIsfixedPoint,jdbcType=INTEGER},
      </if>
      <if test="record.modelsFixedReturn != null" >
        models_fixed_return = #{record.modelsFixedReturn,jdbcType=VARCHAR},
      </if>
      <if test="record.modelsFreeTime != null" >
        models_free_time = #{record.modelsFreeTime,jdbcType=INTEGER},
      </if>
      <if test="record.modelsInpriceId != null" >
        models_inPrice_id = #{record.modelsInpriceId,jdbcType=BIGINT},
      </if>
      <if test="record.modelsRentType != null" >
        models_rent_type = #{record.modelsRentType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update models
    set models_id = #{record.modelsId,jdbcType=BIGINT},
      models_code = #{record.modelsCode,jdbcType=VARCHAR},
      models_name = #{record.modelsName,jdbcType=VARCHAR},
      models_deposit = #{record.modelsDeposit,jdbcType=DECIMAL},
      models_content = #{record.modelsContent,jdbcType=VARCHAR},
      models_state = #{record.modelsState,jdbcType=INTEGER},
      models_channel_id = #{record.modelsChannelId,jdbcType=BIGINT},
      models_rent_limit = #{record.modelsRentLimit,jdbcType=INTEGER},
      models_isfixed_point = #{record.modelsIsfixedPoint,jdbcType=INTEGER},
      models_fixed_return = #{record.modelsFixedReturn,jdbcType=VARCHAR},
      models_free_time = #{record.modelsFreeTime,jdbcType=INTEGER},
      models_inPrice_id = #{record.modelsInpriceId,jdbcType=BIGINT},
      models_rent_type = #{record.modelsRentType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.entity.dto.Models" >
    update models
    <set >
      <if test="modelsCode != null" >
        models_code = #{modelsCode,jdbcType=VARCHAR},
      </if>
      <if test="modelsName != null" >
        models_name = #{modelsName,jdbcType=VARCHAR},
      </if>
      <if test="modelsDeposit != null" >
        models_deposit = #{modelsDeposit,jdbcType=DECIMAL},
      </if>
      <if test="modelsContent != null" >
        models_content = #{modelsContent,jdbcType=VARCHAR},
      </if>
      <if test="modelsState != null" >
        models_state = #{modelsState,jdbcType=INTEGER},
      </if>
      <if test="modelsChannelId != null" >
        models_channel_id = #{modelsChannelId,jdbcType=BIGINT},
      </if>
      <if test="modelsRentLimit != null" >
        models_rent_limit = #{modelsRentLimit,jdbcType=INTEGER},
      </if>
      <if test="modelsIsfixedPoint != null" >
        models_isfixed_point = #{modelsIsfixedPoint,jdbcType=INTEGER},
      </if>
      <if test="modelsFixedReturn != null" >
        models_fixed_return = #{modelsFixedReturn,jdbcType=VARCHAR},
      </if>
      <if test="modelsFreeTime != null" >
        models_free_time = #{modelsFreeTime,jdbcType=INTEGER},
      </if>
      <if test="modelsInpriceId != null" >
        models_inPrice_id = #{modelsInpriceId,jdbcType=BIGINT},
      </if>
      <if test="modelsRentType != null" >
        models_rent_type = #{modelsRentType,jdbcType=INTEGER},
      </if>
    </set>
    where models_id = #{modelsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.entity.dto.Models" >
    update models
    set models_code = #{modelsCode,jdbcType=VARCHAR},
      models_name = #{modelsName,jdbcType=VARCHAR},
      models_deposit = #{modelsDeposit,jdbcType=DECIMAL},
      models_content = #{modelsContent,jdbcType=VARCHAR},
      models_state = #{modelsState,jdbcType=INTEGER},
      models_channel_id = #{modelsChannelId,jdbcType=BIGINT},
      models_rent_limit = #{modelsRentLimit,jdbcType=INTEGER},
      models_isfixed_point = #{modelsIsfixedPoint,jdbcType=INTEGER},
      models_fixed_return = #{modelsFixedReturn,jdbcType=VARCHAR},
      models_free_time = #{modelsFreeTime,jdbcType=INTEGER},
      models_inPrice_id = #{modelsInpriceId,jdbcType=BIGINT},
      models_rent_type = #{modelsRentType,jdbcType=INTEGER}
    where models_id = #{modelsId,jdbcType=BIGINT}
  </update>
  
  <select id="selectUnionByExample" resultMap="BaseUnionResultMap" parameterType="org.entity.dto.ModelsExample" >
    select 
    *
    from models m left join channel c on m.models_channel_id = c.channel_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  
  <select id="countUnionByExample" parameterType="org.entity.dto.ModelsExample" resultType="java.lang.Integer" >
    select count(*) from models m left join channel c on m.models_channel_id = c.channel_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  
  
   <select id="selectModelIdByExample" resultMap="IdResultMap" parameterType="org.entity.dto.ModelsExample" >
    select
    models_id
    from models
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
</mapper>