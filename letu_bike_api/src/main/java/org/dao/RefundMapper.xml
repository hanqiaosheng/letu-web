<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.dao.RefundMapper" >
  <resultMap id="BaseResultMap" type="org.entity.dto.Refund" >
    <id column="refund_id" property="refundId" jdbcType="BIGINT" />
    <result column="refund_account_id" property="refundAccountId" jdbcType="BIGINT" />
    <result column="refund_admin_id" property="refundAdminId" jdbcType="BIGINT" />
    <result column="refund_money" property="refundMoney" jdbcType="DECIMAL" />
    <result column="refund_operatetime" property="refundOperatetime" jdbcType="TIMESTAMP" />
    <result column="refund_state" property="refundState" jdbcType="INTEGER" />
    <result column="refund_createtime" property="refundCreatetime" jdbcType="TIMESTAMP" />
    <result column="refund_type" property="refundType" jdbcType="INTEGER" />
    <result column="refund_code" property="refundCode" jdbcType="VARCHAR" />
    <result column="refund_order_id" property="refundOrderId" jdbcType="VARCHAR" />
    <result column="refund_refuse_reason" property="refundRefuseReason" jdbcType="VARCHAR" />
    <result column="refund_source" property="refundSource" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="BaseUnionResultMap" type="org.entity.dto.Refund" extends="BaseResultMap">
  <association property="admin" javaType="org.entity.dto.Admin">
    <id column="admin_id" property="adminId" jdbcType="BIGINT" />
    <result column="admin_channel_id" property="adminChannelId" jdbcType="BIGINT" />
    <result column="admin_username" property="adminUsername" jdbcType="VARCHAR" />
    <result column="admin_pwd" property="adminPwd" jdbcType="VARCHAR" />
    <result column="admin_realname" property="adminRealname" jdbcType="VARCHAR" />
    <result column="admin_tel" property="adminTel" jdbcType="VARCHAR" />
    <result column="admin_reg_time" property="adminRegTime" jdbcType="DATE" />
    <result column="admin_state" property="adminState" jdbcType="INTEGER" />
    <result column="admin_salt" property="adminSalt" jdbcType="VARCHAR" />
    <result column="admin_district_code" property="adminDistrictCode" jdbcType="VARCHAR" />
    <result column="admin_create_adminId" property="adminCreateAdminid" jdbcType="BIGINT" />
    <result column="admin_create_email" property="adminCreateEmail" jdbcType="VARCHAR" />
  </association>
  <collection property="account" ofType="org.entity.dto.Account">
        <id column="account_id" property="accountId" jdbcType="BIGINT" />
	    <result column="account_user_id" property="accountUserId" jdbcType="BIGINT" />
	    <result column="account_totalmoney" property="accountTotalmoney" jdbcType="DECIMAL" />
	    <result column="account_deposit" property="accountDeposit" jdbcType="DECIMAL" />
	    <result column="account_bbin" property="accountBbin" jdbcType="DECIMAL" />
	    <result column="account_freezemoney" property="accountFreezemoney" jdbcType="DECIMAL" />
	    <result column="account_available_balance" property="accountAvailableBalance" jdbcType="DECIMAL" />
	    <result column="account_createtime" property="accountCreatetime" jdbcType="TIMESTAMP" />
	    <result column="account_updatetime" property="accountUpdatetime" jdbcType="TIMESTAMP" />
	    <result column="account_is_freeze" property="accountIsFreeze" jdbcType="INTEGER" />
	    <result column="account_final_recharge_time" property="accountFinalRechargeTime" jdbcType="TIMESTAMP" />
	    <result column="account_final_consume_time" property="accountFinalConsumeTime" jdbcType="TIMESTAMP" />
	    <association property="aUser" javaType="org.entity.dto.User">
	        <id column="user_id" property="userId" jdbcType="BIGINT" />
		    <result column="user_account_id" property="userAccountId" jdbcType="BIGINT" />
		    <result column="user_nickname" property="userNickname" jdbcType="VARCHAR" />
		    <result column="user_tel" property="userTel" jdbcType="VARCHAR" />
		    <result column="user_idcard" property="userIdcard" jdbcType="VARCHAR" />
		    <result column="user_realname" property="userRealname" jdbcType="VARCHAR" />
		    <result column="user_profile_image" property="userProfileImage" jdbcType="VARCHAR" />
		    <result column="user_gender" property="userGender" jdbcType="INTEGER" />
		    <result column="user_openId" property="userOpenid" jdbcType="VARCHAR" />
		    <result column="user_unionId" property="userUnionid" jdbcType="VARCHAR" />
		    <result column="user_state" property="userState" jdbcType="INTEGER" />
		    <result column="user_createtime" property="userCreatetime" jdbcType="TIMESTAMP" />
		    <result column="user_level" property="userLevel" jdbcType="INTEGER" />
		    <result column="user_integral" property="userIntegral" jdbcType="INTEGER" />
		    <result column="user_logintime" property="userLogintime" jdbcType="TIMESTAMP" />
		    <result column="user_usetime" property="userUsetime" jdbcType="INTEGER" />
		    <result column="user_use_distance" property="userUseDistance" jdbcType="INTEGER" />
		    <result column="user_channel_id" property="userChannelId" jdbcType="BIGINT" />
		    <result column="user_bike_id" property="userBikeId" jdbcType="BIGINT" />
		    <result column="user_isblacklist" property="userIsblacklist" jdbcType="SMALLINT" />
		    <result column="user_grade" property="userGrade" jdbcType="INTEGER" />
		    <result column="user_defriend_time" property="userDefriendTime" jdbcType="TIMESTAMP" />
	    </association>
  </collection>
  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    refund_id, refund_account_id, refund_admin_id, refund_money, refund_operatetime, 
    refund_state, refund_createtime, refund_type, refund_code, refund_order_id, refund_refuse_reason, 
    refund_source
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.entity.dto.RefundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from refund
    where refund_id = #{refundId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from refund
    where refund_id = #{refundId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.entity.dto.RefundExample" >
    delete from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.entity.dto.Refund" >
    insert into refund (refund_id, refund_account_id, refund_admin_id, 
      refund_money, refund_operatetime, refund_state, 
      refund_createtime, refund_type, refund_code, 
      refund_order_id, refund_refuse_reason, refund_source)
    values (#{refundId,jdbcType=BIGINT}, #{refundAccountId,jdbcType=BIGINT}, #{refundAdminId,jdbcType=BIGINT}, 
      #{refundMoney,jdbcType=DECIMAL}, #{refundOperatetime,jdbcType=TIMESTAMP}, #{refundState,jdbcType=INTEGER}, 
      #{refundCreatetime,jdbcType=TIMESTAMP}, #{refundType,jdbcType=INTEGER}, #{refundCode,jdbcType=VARCHAR}, 
      #{refundOrderId,jdbcType=VARCHAR}, #{refundRefuseReason,jdbcType=VARCHAR}, #{refundSource,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.entity.dto.Refund" >
    insert into refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="refundAccountId != null" >
        refund_account_id,
      </if>
      <if test="refundAdminId != null" >
        refund_admin_id,
      </if>
      <if test="refundMoney != null" >
        refund_money,
      </if>
      <if test="refundOperatetime != null" >
        refund_operatetime,
      </if>
      <if test="refundState != null" >
        refund_state,
      </if>
      <if test="refundCreatetime != null" >
        refund_createtime,
      </if>
      <if test="refundType != null" >
        refund_type,
      </if>
      <if test="refundCode != null" >
        refund_code,
      </if>
      <if test="refundOrderId != null" >
        refund_order_id,
      </if>
      <if test="refundRefuseReason != null" >
        refund_refuse_reason,
      </if>
      <if test="refundSource != null" >
        refund_source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        #{refundId,jdbcType=BIGINT},
      </if>
      <if test="refundAccountId != null" >
        #{refundAccountId,jdbcType=BIGINT},
      </if>
      <if test="refundAdminId != null" >
        #{refundAdminId,jdbcType=BIGINT},
      </if>
      <if test="refundMoney != null" >
        #{refundMoney,jdbcType=DECIMAL},
      </if>
      <if test="refundOperatetime != null" >
        #{refundOperatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundState != null" >
        #{refundState,jdbcType=INTEGER},
      </if>
      <if test="refundCreatetime != null" >
        #{refundCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundType != null" >
        #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundCode != null" >
        #{refundCode,jdbcType=VARCHAR},
      </if>
      <if test="refundOrderId != null" >
        #{refundOrderId,jdbcType=VARCHAR},
      </if>
      <if test="refundRefuseReason != null" >
        #{refundRefuseReason,jdbcType=VARCHAR},
      </if>
      <if test="refundSource != null" >
        #{refundSource,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.entity.dto.RefundExample" resultType="java.lang.Integer" >
    select count(*) from refund
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refund
    <set >
      <if test="record.refundId != null" >
        refund_id = #{record.refundId,jdbcType=BIGINT},
      </if>
      <if test="record.refundAccountId != null" >
        refund_account_id = #{record.refundAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.refundAdminId != null" >
        refund_admin_id = #{record.refundAdminId,jdbcType=BIGINT},
      </if>
      <if test="record.refundMoney != null" >
        refund_money = #{record.refundMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.refundOperatetime != null" >
        refund_operatetime = #{record.refundOperatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundState != null" >
        refund_state = #{record.refundState,jdbcType=INTEGER},
      </if>
      <if test="record.refundCreatetime != null" >
        refund_createtime = #{record.refundCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundType != null" >
        refund_type = #{record.refundType,jdbcType=INTEGER},
      </if>
      <if test="record.refundCode != null" >
        refund_code = #{record.refundCode,jdbcType=VARCHAR},
      </if>
      <if test="record.refundOrderId != null" >
        refund_order_id = #{record.refundOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.refundRefuseReason != null" >
        refund_refuse_reason = #{record.refundRefuseReason,jdbcType=VARCHAR},
      </if>
      <if test="record.refundSource != null" >
        refund_source = #{record.refundSource,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refund
    set refund_id = #{record.refundId,jdbcType=BIGINT},
      refund_account_id = #{record.refundAccountId,jdbcType=BIGINT},
      refund_admin_id = #{record.refundAdminId,jdbcType=BIGINT},
      refund_money = #{record.refundMoney,jdbcType=DECIMAL},
      refund_operatetime = #{record.refundOperatetime,jdbcType=TIMESTAMP},
      refund_state = #{record.refundState,jdbcType=INTEGER},
      refund_createtime = #{record.refundCreatetime,jdbcType=TIMESTAMP},
      refund_type = #{record.refundType,jdbcType=INTEGER},
      refund_code = #{record.refundCode,jdbcType=VARCHAR},
      refund_order_id = #{record.refundOrderId,jdbcType=VARCHAR},
      refund_refuse_reason = #{record.refundRefuseReason,jdbcType=VARCHAR},
      refund_source = #{record.refundSource,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.entity.dto.Refund" >
    update refund
    <set >
      <if test="refundAccountId != null" >
        refund_account_id = #{refundAccountId,jdbcType=BIGINT},
      </if>
      <if test="refundAdminId != null" >
        refund_admin_id = #{refundAdminId,jdbcType=BIGINT},
      </if>
      <if test="refundMoney != null" >
        refund_money = #{refundMoney,jdbcType=DECIMAL},
      </if>
      <if test="refundOperatetime != null" >
        refund_operatetime = #{refundOperatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundState != null" >
        refund_state = #{refundState,jdbcType=INTEGER},
      </if>
      <if test="refundCreatetime != null" >
        refund_createtime = #{refundCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundType != null" >
        refund_type = #{refundType,jdbcType=INTEGER},
      </if>
      <if test="refundCode != null" >
        refund_code = #{refundCode,jdbcType=VARCHAR},
      </if>
      <if test="refundOrderId != null" >
        refund_order_id = #{refundOrderId,jdbcType=VARCHAR},
      </if>
      <if test="refundRefuseReason != null" >
        refund_refuse_reason = #{refundRefuseReason,jdbcType=VARCHAR},
      </if>
      <if test="refundSource != null" >
        refund_source = #{refundSource,jdbcType=INTEGER},
      </if>
    </set>
    where refund_id = #{refundId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.entity.dto.Refund" >
    update refund
    set refund_account_id = #{refundAccountId,jdbcType=BIGINT},
      refund_admin_id = #{refundAdminId,jdbcType=BIGINT},
      refund_money = #{refundMoney,jdbcType=DECIMAL},
      refund_operatetime = #{refundOperatetime,jdbcType=TIMESTAMP},
      refund_state = #{refundState,jdbcType=INTEGER},
      refund_createtime = #{refundCreatetime,jdbcType=TIMESTAMP},
      refund_type = #{refundType,jdbcType=INTEGER},
      refund_code = #{refundCode,jdbcType=VARCHAR},
      refund_order_id = #{refundOrderId,jdbcType=VARCHAR},
      refund_refuse_reason = #{refundRefuseReason,jdbcType=VARCHAR},
      refund_source = #{refundSource,jdbcType=INTEGER}
    where refund_id = #{refundId,jdbcType=BIGINT}
  </update>
  
  <select id="selectUnionByExample" resultMap="BaseUnionResultMap" parameterType="org.entity.dto.RefundExample" >
    select * from refund r left join account a on r.refund_account_id = a.account_id
                           left join user u on u.user_id = a.account_user_id
                           left join admin ad on ad.admin_id = r.refund_admin_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  
  <select id="countUnionByExample" parameterType="org.entity.dto.RefundExample" resultType="java.lang.Integer" >
    select count(*) from refund r left join account a on r.refund_account_id = a.account_id
                           left join user u on u.user_id = a.account_user_id
                           left join admin ad on ad.admin_id = r.refund_admin_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
</mapper>